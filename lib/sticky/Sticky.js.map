{"version":3,"names":[],"mappings":"","sources":["sticky/Sticky.js"],"sourcesContent":["/**\n * @file Button\n * @author cgzero(cgzero@cgzero.com)\n * @data 2017-07-10\n */\n\nimport {h, Component} from 'preact';\nimport classNames from 'classnames';\nimport {position, addClass, removeClass, setStyle} from '../util/dom';\n\n\n/**\n * 按钮\n *\n * @class\n */\nexport default class Sticky extends Component {\n\n    static defaultProps = {\n        prefixCls: 'cui'\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isSticky: false\n        };\n\n        // 是否为ios系统\n        // this.isios = !!navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\n        this.watchStickyTimer = null;\n    }\n\n    componentDidMount() {\n        this.watchSticky();\n\n        // 外层容器设置高度，防止因为fixed页面坍塌产生了抖动\n        let wrapHeight = this.stickyElem.clientHeight\n            ? this.stickyElem.clientHeight  + 'px'\n            : 'auto';\n        setStyle(this.stickyWrap, 'height', wrapHeight);\n    }\n\n    componentWillUnmount() {\n        cancelAnimationFrame(this.watchStickyTimer);\n    }\n\n    topChange() {\n        let scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n        let tempHeight = position(this.stickyWrap).top;\n\n        if (scrollTop > tempHeight) {\n            addClass(this.stickyElem, 'fixed');\n        }\n        else {\n            removeClass(this.stickyElem, 'fixed');\n        }\n        this.watchStickyTimer = requestAnimationFrame(this.topChange.bind(this));\n    }\n\n    /**\n     * 监听吸顶\n     *\n     * @private\n     */\n    watchSticky() {\n        if (this.watchStickyTimer) {\n            cancelAnimationFrame(this.watchStickyTimer);\n        }\n\n        this.watchStickyTimer = requestAnimationFrame(this.topChange.bind(this));\n    }\n\n    render() {\n        const {prefixCls, children, className, ...others} = this.props;\n\n        const cls = classNames({\n            [`${prefixCls}-sticky`]: true,\n            [className]: className\n        });\n\n        return (\n            <div className={cls} ref={dom => this.stickyWrap = dom} {...others}>\n                <div ref={dom => this.stickyElem = dom}>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}\n"],"file":"Sticky.js"}