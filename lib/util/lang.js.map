{"version":3,"names":[],"mappings":"","sources":["util/lang.js"],"sourcesContent":["/**\n * @file 拷贝于koubei  语言增强模块\n * @author cgzero(cgzero@cgzero.com)\n * @date 2017-04-27\n */\n\n\n/**\n * 获取字符在gbk编码下的字节长度, 实现原理是认为大于127的就一定是双字节。如果字符超出gbk编码范围, 则这个计算不准确\n *\n * @public\n * @param {string} source 目标字符串\n * @return {number} 字节长度\n */\nexport function getByteLength(source) {\n\n    return String(source)\n        .replace(/[^\\x00-\\xff]/g, 'ci').length;\n}\n\n/**\n * 对目标字符串进行html编码\n *\n * @public\n * @param {string} source 目标字符串\n * @return {string} html编码后的字符串\n */\nexport function encodeHTML(source) {\n    return String(source)\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;');\n}\n\n/**\n * 对目标字符串进行html解码\n *\n * @public\n * @param {string} source 目标字符串\n * @return {string} html解码后的字符串\n */\nexport function decodeHTML(source) {\n    let str = String(source)\n        .replace(/&quot;/g, '\"')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&amp;/g, '&');\n    // 处理转义的中文和实体字符\n    return str.replace(/&#([\\d]+);/g, function (_0, _1) {\n        return String.fromCharCode(parseInt(_1, 10));\n    });\n}\n\n\n/**\n * 删除目标字符串内的所有空白字符\n *\n * @public\n * @param {string} source 目标字符串\n * @return {string} 删除所有空白字符后的字符串\n */\n\nexport function trimAll(source) {\n    let trimer = new RegExp('[\\\\s\\\\t\\\\xa0\\\\u3000]+', 'g');\n    return String(source).replace(trimer, '');\n}\n"],"file":"lang.js"}