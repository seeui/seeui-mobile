{"version":3,"names":[],"mappings":"","sources":["switch/Switch.js"],"sourcesContent":["/**\n * @file: Switch\n * @author: afcfzf(9301462@qq.com)\n * @date: 2017-11-24\n */\n\nimport {h} from 'preact';\nimport classNames from 'classnames';\n\nlet startX = 0;\nlet offsetX = 0;\nlet moved = 0;\nlet positivePos = null;\n\nexport default ({\n    checked = false,\n    disabled = false,\n    prefixCls = 'cui',\n    onChange = () => {},\n    name = null,\n    children,\n    className,\n    value,\n    ...others\n}) => {\n    positivePos = checked;\n    let switchEle = null;\n    const cls = classNames({\n        [`${prefixCls}-switch`]: true,\n        [className]: className,\n        checked: checked,\n        disabled: disabled\n    });\n    const clkHandler = (e, evt) => {\n        if (disabled) {\n            return false;\n        }\n        evt.preventDefault(); // 取消默认事件\n        onChange(e.checked);\n    };\n    const touchHandler = evt => {\n            const touchObj = evt.targetTouches[0];\n            switch (evt.type) {\n                case 'touchstart':\n                    startX = touchObj.screenX;\n                    moved = false;\n                    break;\n                case 'touchmove':\n                    offsetX = touchObj.screenX - startX;\n                    moved = true;\n                    break;\n                case 'touchend':\n                    if (disabled) {\n                        return false;\n                    }\n                    const direction = !!(offsetX > 0); // 方向为正数（右），则true\n                    Math.abs(offsetX) >= switchEle.offsetWidth >> 2 && positivePos !== direction && moved\n                    ? onChange(!checked)\n                    : null;\n                    positivePos = direction;\n                    break;\n                default:\n                    break;\n            }\n        };\n\n    return (\n        <div className={cls} {...others}>\n            <label\n                className={`${prefixCls}-switch-wrap`}\n                onClick={evt => clkHandler({checked: !checked, value}, evt)}\n                onTouchStart={evt => touchHandler(evt)}\n                onTouchMove={evt => touchHandler(evt)}\n                onTouchEnd={evt => touchHandler(evt)}\n            >\n                <span className={`${prefixCls}-switch-icon`} ref={ref => (switchEle = ref)} />\n                <input\n                    className={`${prefixCls}-switch-ipt`}\n                    checked={checked}\n                    disabled={disabled}\n                    type=\"checkbox\"\n                    name={name}\n                />\n                <span className={`${prefixCls}-switch-text`}>{children}</span>\n            </label>\n        </div>\n    );\n};\n"],"file":"Switch.js"}