{"version":3,"names":[],"mappings":"","sources":["dialog/Confirm.js"],"sourcesContent":["/**\n * @file Confirm\n * @author wuqi57(441984145@qq.com)\n * @time 17/6/30\n */\n\nimport {h, Component} from 'preact';\nimport classNames from 'classnames';\nimport Singleton from '../util/Singleton';\n\nimport Dialog from './Dialog';\n\n\nlet defaultButtons = {\n    submit: {\n        role: 'submit',\n        type: 'primary',\n        value: '确定',\n        size: 'large'\n    },\n    cancel: {\n        role: 'cancel',\n        type: 'default',\n        value: '取消',\n        size: 'large'\n    }\n};\n\nexport default class Confirm extends Component {\n    static defaultProps = {\n        prefixCls: 'cui',\n        hasClose: false,\n        maskClickClose: false\n    };\n\n    constructor(props) {\n        super(props);\n\n        /**\n         * 初始状态\n         *\n         * @private\n         * @type {Object}\n         */\n        this.state.show = true;\n    }\n\n    /**\n     * 按钮关闭事件重新封装\n     *\n     * @private\n     * @param {Object} button 按钮配置参数\n     */\n    clickHandler(button) {\n        const {onSubmit, onCancel} = this.props;\n        let res = true;\n\n        if (button.role === 'submit' && onSubmit) {\n            res = onSubmit();\n        }\n        else if (button.role === 'cancel' && onCancel) {\n            res = onCancel();\n        }\n\n        res !== false && this.setState({show: false});\n    }\n\n    onConfirmHide(data) {\n        if (data) {\n            this.props.onHide && this.props.onHide(data);\n        }\n\n        this.setState({show: false});\n    }\n\n    render() {\n        const {\n            prefixCls,\n            className,\n            buttons = [],\n            children,\n            ...others\n        } = this.props;\n\n        const confirmCls = classNames({\n            [`${prefixCls}-dialog-confirm`]: true,\n            [className]: className\n        });\n\n        let dialogButtons = [];\n\n        // 配置buttons，必须传role参数\n        if (buttons.length) {\n            dialogButtons = buttons.map(button => {\n                let role = button.role;\n                let defaultButton = defaultButtons[role];\n\n                return {\n                    ...defaultButton,\n                    button,\n                    onClick: () => this.clickHandler(button)\n                };\n            });\n        }\n        else {\n            let {submit, cancel} = defaultButtons;\n\n            dialogButtons = [\n                {\n                    ...submit,\n                    onClick: () => this.clickHandler(submit)\n                },\n                {\n                    ...cancel,\n                    onClick: () => this.clickHandler(cancel)\n                }\n            ];\n        }\n\n        return (\n            <Dialog\n                {...others}\n                show={this.state.show}\n                className={confirmCls}\n                buttons={dialogButtons}\n                onHide={this.onConfirmHide.bind(this)}\n            >\n                {children}\n            </Dialog>\n        );\n    }\n}\n\nexport const SingleConfirm = new Singleton(Confirm);\n"],"file":"Confirm.js"}