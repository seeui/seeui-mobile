{"version":3,"names":[],"mappings":"","sources":["dialog/Alert.js"],"sourcesContent":["/**\n * @file Alert\n * @author wuqi57(441984145@qq.com)\n * @time 17/6/29\n */\n\nimport {h, Component} from 'preact';\nimport classNames from 'classnames';\nimport Singleton from '../util/Singleton';\n\nimport Dialog from './Dialog';\n\n\nlet defaultButton = {\n    type: 'primary',\n    value: '确定',\n    size: 'large'\n};\n\nexport default class Alert extends Component {\n\n    static defaultProps = {\n        prefixCls: 'cui',\n        hasClose: false,\n        maskClickClose: false\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state.show = true;\n    }\n\n    onAlertHide(data) {\n        if (data) {\n            this.props.onHide && this.props.onHide(data);\n        }\n\n        this.setState({show: false});\n    }\n\n    render() {\n        // show 和 onHide会重写，所以从others里提取出来\n        const {prefixCls, className, button = {}, children, onSubmit, ...others} = this.props;\n\n        const alertCls = classNames({\n            [`${prefixCls}-dialog-alert`]: true,\n            [className]: className\n        });\n\n        let dialogButtons = [{\n            ...defaultButton,\n            ...button,\n            onClick: () => {\n                let res = true;\n\n                if (onSubmit) {\n                    res = onSubmit();\n                }\n\n                // 如果返回false，会阻止页面关闭\n                res !== false && this.setState({show: false});\n            }\n        }];\n\n        return (\n            <Dialog\n                {...others}\n                show={this.state.show}\n                className={alertCls}\n                buttons={dialogButtons}\n                onHide={this.onAlertHide.bind(this)}\n            >\n                {children}\n            </Dialog>\n        );\n    }\n}\n\nexport const SingleAlert = new Singleton(Alert);\n"],"file":"Alert.js"}